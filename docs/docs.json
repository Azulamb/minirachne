[
  {
    "kind": "class",
    "name": "Server",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
      "line": 12,
      "col": 0,
      "byteIndex": 376
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Minirachne server."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 23,
            "col": 4,
            "byteIndex": 680
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "URL",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URL"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 13,
            "col": 4,
            "byteIndex": 399
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "keyFile",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "certFile",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "files",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 14,
            "col": 4,
            "byteIndex": 456
          }
        },
        {
          "tsType": {
            "repr": "AbortController",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AbortController"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "controller",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 18,
            "col": 4,
            "byteIndex": 551
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "status",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 19,
            "col": 4,
            "byteIndex": 592
          }
        },
        {
          "tsType": {
            "repr": "Router",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Router"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "router",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 20,
            "col": 4,
            "byteIndex": 619
          }
        },
        {
          "tsType": {
            "repr": "ServerResponse",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ServerResponse"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "response",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 21,
            "col": 4,
            "byteIndex": 644
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getURL",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 29,
            "col": 4,
            "byteIndex": 814
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "URL",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "URL"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 33,
            "col": 4,
            "byteIndex": 876
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCertFile",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "keyFile",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "certFile",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 39,
            "col": 4,
            "byteIndex": 961
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stop",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 45,
            "col": 4,
            "byteIndex": 1103
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getConfig",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 49,
            "col": 4,
            "byteIndex": 1151
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "start",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 66,
            "col": 4,
            "byteIndex": 1534
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 84,
            "col": 4,
            "byteIndex": 1839
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "upgradeWebSocket",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "webSocketEvent",
                "optional": false,
                "tsType": {
                  "repr": "WebSocketListener",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocketListener"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "Deno.UpgradeWebSocketOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.UpgradeWebSocketOptions"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 96,
            "col": 4,
            "byteIndex": 2114
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MiddlewareManager",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 109
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Middleware manager."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Middleware",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Middleware"
              }
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "middleware",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 13,
            "col": 4,
            "byteIndex": 386
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Create MiddlewareManager.\nMiddlewareManager.create(middleware1, middleware2, ...);"
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "middleware",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Middleware",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Middleware"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "MiddlewareManager",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MiddlewareManager"
              }
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 9,
            "col": 4,
            "byteIndex": 257
          }
        },
        {
          "jsDoc": {
            "doc": "Add middleware."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "middleware",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Middleware",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Middleware"
                    }
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 16,
            "col": 4,
            "byteIndex": 453
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exec",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "Promise",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": [
                  {
                    "repr": "void",
                    "kind": "keyword",
                    "keyword": "void"
                  }
                ],
                "typeName": "Promise"
              }
            },
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 21,
            "col": 4,
            "byteIndex": 554
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "m",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "m"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "Cookie",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "line": 4,
      "col": 13,
      "byteIndex": 211
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "get",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            },
            {
              "name": "set",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            },
            {
              "name": "delete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "Router",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
      "line": 243,
      "col": 0,
      "byteIndex": 6130
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Minirachne router."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = GET",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 250,
            "col": 4,
            "byteIndex": 6404
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = HEAD",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "head",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 260,
            "col": 4,
            "byteIndex": 6826
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = POST",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "post",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 270,
            "col": 4,
            "byteIndex": 7250
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = PUT",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "put",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 280,
            "col": 4,
            "byteIndex": 7673
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = DELETE",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set middleware in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 290,
            "col": 4,
            "byteIndex": 8090
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = OPTIONS",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 304,
            "col": 4,
            "byteIndex": 8718
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = PATCH",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "patch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "MiddlewareManager",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "MiddlewareManager"
                      }
                    },
                    {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "Middleware",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "Middleware"
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 318,
            "col": 4,
            "byteIndex": 9342
          }
        }
      ],
      "extends": "BaseRouter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "StaticRoute",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
      "line": 11,
      "col": 0,
      "byteIndex": 311
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create Static file server route."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "docs",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "option",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "order",
                      "params": [],
                      "computed": false,
                      "optional": true,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      "typeParams": []
                    },
                    {
                      "name": "pattern",
                      "params": [],
                      "computed": false,
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          {
                            "repr": "URLPattern",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "URLPattern"
                            }
                          }
                        ]
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 21,
            "col": 4,
            "byteIndex": 626
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "DEFAULT_CHUNK_SIZE",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 12,
            "col": 4,
            "byteIndex": 356
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 13,
            "col": 4,
            "byteIndex": 392
          }
        },
        {
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 14,
            "col": 4,
            "byteIndex": 416
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "docs",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 15,
            "col": 4,
            "byteIndex": 446
          }
        },
        {
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "headers",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 16,
            "col": 4,
            "byteIndex": 472
          }
        },
        {
          "tsType": {
            "repr": "NotfoundCallback",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotfoundCallback"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "notfound",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 17,
            "col": 4,
            "byteIndex": 502
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "directoryIndex",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 18,
            "col": 4,
            "byteIndex": 542
          }
        },
        {
          "tsType": {
            "repr": "MIMETypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MIMETypes"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mime",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 19,
            "col": 4,
            "byteIndex": 596
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBaseHeader",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 45,
            "col": 4,
            "byteIndex": 1204
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBaseHeader",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 49,
            "col": 4,
            "byteIndex": 1276
          }
        },
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "param",
                "name": "callback",
                "doc": "Callback. Set default if none."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNotfound",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": true,
                "tsType": {
                  "repr": "NotfoundCallback",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NotfoundCallback"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 56,
            "col": 4,
            "byteIndex": 1403
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseNotfound",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 69,
            "col": 4,
            "byteIndex": 1632
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDirectoryIndex",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "directoryIndex",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 73,
            "col": 4,
            "byteIndex": 1715
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMIMETypes",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mime",
                "optional": false,
                "tsType": {
                  "repr": "MIMETYPES",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MIMETYPES"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 79,
            "col": 4,
            "byteIndex": 1832
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseDirectory",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "basePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 84,
            "col": 4,
            "byteIndex": 1914
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createReadableStream",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "range",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "start",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "end",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 102,
            "col": 4,
            "byteIndex": 2330
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parseRange",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": false,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 131,
            "col": 4,
            "byteIndex": 3109
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseFile",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "head",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              },
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": true,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 144,
            "col": 4,
            "byteIndex": 3552
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createHeader",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": false,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "range",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "start",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "end",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 182,
            "col": 4,
            "byteIndex": 4629
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPath",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "request",
                "optional": false,
                "tsType": {
                  "repr": "Request",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Request"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 199,
            "col": 4,
            "byteIndex": 5078
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 206,
            "col": 4,
            "byteIndex": 5255
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Route",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Route"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "WebSocketListener",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 42
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Minirachne WebSocket listener."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onOpen",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "Event",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Event"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 6,
            "col": 4,
            "byteIndex": 112
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "MessageEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 8,
            "col": 4,
            "byteIndex": 195
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onClose",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "CloseEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CloseEvent"
                  }
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 10,
            "col": 4,
            "byteIndex": 288
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    },
                    {
                      "repr": "ErrorEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ErrorEvent"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": {
              "repr": "void",
              "kind": "keyword",
              "keyword": "void"
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 12,
            "col": 4,
            "byteIndex": 377
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "BasicAuth",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
      "line": 7,
      "col": 0,
      "byteIndex": 141
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Basic authentication."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "assign",
              "left": {
                "kind": "identifier",
                "name": "message",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              "right": "SECRET AREA",
              "tsType": null
            }
          ],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 11,
            "col": 4,
            "byteIndex": 269
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "message",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 8,
            "col": 4,
            "byteIndex": 189
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [],
              "callSignatures": [],
              "indexSignatures": [
                {
                  "readonly": false,
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "keys",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    }
                  ],
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              ]
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "users",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 9,
            "col": 4,
            "byteIndex": 217
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "handle",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 16,
            "col": 4,
            "byteIndex": 354
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parseAuthorization",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 39,
            "col": 4,
            "byteIndex": 912
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addUsers",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "users",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [],
                        "callSignatures": [],
                        "indexSignatures": [
                          {
                            "readonly": false,
                            "params": [
                              {
                                "kind": "identifier",
                                "name": "keys",
                                "optional": false,
                                "tsType": {
                                  "repr": "string",
                                  "kind": "keyword",
                                  "keyword": "string"
                                }
                              }
                            ],
                            "tsType": {
                              "repr": "string",
                              "kind": "keyword",
                              "keyword": "string"
                            }
                          }
                        ]
                      }
                    },
                    {
                      "repr": "",
                      "kind": "array",
                      "array": {
                        "repr": "",
                        "kind": "typeLiteral",
                        "typeLiteral": {
                          "methods": [],
                          "properties": [
                            {
                              "name": "user",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              "typeParams": []
                            },
                            {
                              "name": "password",
                              "params": [],
                              "computed": false,
                              "optional": false,
                              "tsType": {
                                "repr": "string",
                                "kind": "keyword",
                                "keyword": "string"
                              },
                              "typeParams": []
                            }
                          ],
                          "callSignatures": [],
                          "indexSignatures": []
                        }
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 54,
            "col": 4,
            "byteIndex": 1297
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "addUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "password",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 68,
            "col": 4,
            "byteIndex": 1638
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeAllUsers",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 73,
            "col": 4,
            "byteIndex": 1738
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "removeUser",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "user",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware/basic_auth.ts",
            "line": 78,
            "col": 4,
            "byteIndex": 1803
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Middleware",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Middleware"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Response",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 39
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Minirachne server response."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 15,
            "col": 4,
            "byteIndex": 344
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "jsonHeader",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 20,
            "col": 4,
            "byteIndex": 459
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "JSON",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "init",
                "optional": true,
                "tsType": {
                  "repr": "ResponseInit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResponseInit"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 5,
            "col": 4,
            "byteIndex": 70
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "json",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "init",
                "optional": true,
                "tsType": {
                  "repr": "ResponseInit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResponseInit"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 21,
            "col": 4,
            "byteIndex": 488
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "RequestData",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 2,
      "col": 0,
      "byteIndex": 21
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Request data."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "request",
              "params": [],
              "readonly": true,
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "Request",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Request"
                }
              },
              "typeParams": []
            },
            {
              "name": "info",
              "params": [],
              "readonly": true,
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "Deno.ServeHandlerInfo",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Deno.ServeHandlerInfo"
                }
              },
              "typeParams": []
            },
            {
              "name": "detail",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [],
                  "callSignatures": [],
                  "indexSignatures": [
                    {
                      "readonly": false,
                      "params": [
                        {
                          "kind": "identifier",
                          "name": "keys",
                          "optional": false,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          }
                        }
                      ],
                      "tsType": {
                        "repr": "any",
                        "kind": "keyword",
                        "keyword": "any"
                      }
                    }
                  ]
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "OnRequestHandler",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 11,
      "col": 0,
      "byteIndex": 242
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [],
      "callSignatures": [
        {
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 12,
            "col": 4,
            "byteIndex": 279
          },
          "params": [
            {
              "kind": "identifier",
              "name": "this",
              "optional": false,
              "tsType": {
                "repr": "Route",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Route"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RequestData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestData"
                }
              }
            }
          ],
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "typeParams": []
        }
      ],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RouteLike",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 15,
      "col": 0,
      "byteIndex": 335
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "onRequest",
          "kind": "method",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 42,
            "col": 4,
            "byteIndex": 825
          },
          "jsDoc": {
            "doc": "Return server Response.\n\nExec next route when return Promise.reject or throw Error.\nThis object is Route when called this method.\nYou can use order and pattern.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Request data etc ..."
              }
            ]
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "this",
              "optional": false,
              "tsType": {
                "repr": "Route",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Route"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RequestData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestData"
                }
              }
            }
          ],
          "returnType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [
        {
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 21,
            "col": 4,
            "byteIndex": 448
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 26,
            "col": 4,
            "byteIndex": 499
          },
          "jsDoc": {
            "doc": "Match URL pattern."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "typeParams": []
        },
        {
          "name": "middleware",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 31,
            "col": 4,
            "byteIndex": 560
          },
          "jsDoc": {
            "doc": "Exec before onRequext."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MiddlewareManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MiddlewareManager"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "Route",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 45,
      "col": 0,
      "byteIndex": 890
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "RouteLike",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "RouteLike"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 51,
            "col": 4,
            "byteIndex": 1017
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 56,
            "col": 4,
            "byteIndex": 1067
          },
          "jsDoc": {
            "doc": "Match URL pattern."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Middleware",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 59,
      "col": 0,
      "byteIndex": 1091
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [
            {
              "name": "handle",
              "kind": "method",
              "params": [
                {
                  "kind": "identifier",
                  "name": "data",
                  "optional": false,
                  "tsType": {
                    "repr": "RequestData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RequestData"
                    }
                  }
                }
              ],
              "optional": false,
              "returnType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "typeParams": []
            }
          ],
          "properties": [],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "Redirect",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/redirect.ts",
      "line": 16,
      "col": 13,
      "byteIndex": 381
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create Redirect Response."
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "MultipleChoices",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "MovedPermanently",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "Found",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "SeeOther",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "NotModified",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "UseProxy",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "TemporaryRedirect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "PermanentRedirect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "HTTPError",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 6,
      "col": 0,
      "byteIndex": 93
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "HTTPError has Error response."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "param",
                "name": "status",
                "doc": "HTTP Status code."
              }
            ]
          },
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "status",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            },
            {
              "kind": "identifier",
              "name": "responseInit",
              "optional": true,
              "tsType": {
                "repr": "ResponseInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ResponseInit"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 14,
            "col": 4,
            "byteIndex": 272
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ResponseInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ResponseInit"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseInit",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 7,
            "col": 4,
            "byteIndex": 133
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "propagation",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 8,
            "col": 4,
            "byteIndex": 169
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createResponse",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 20,
            "col": 4,
            "byteIndex": 476
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPropagation",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "propagation",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 24,
            "col": 4,
            "byteIndex": 580
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPropagation",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 29,
            "col": 4,
            "byteIndex": 680
          }
        }
      ],
      "extends": "Error",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "HTTPErrors",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 34,
      "col": 13,
      "byteIndex": 752
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "client",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "BadRequest",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Unauthorized",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PaymentRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Forbidden",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotFound",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "MethodNotAllowed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotAcceptable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ProxyAuthenticationRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ProxyAuthRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestTimeout",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Conflict",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Gone",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "LengthRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PreconditionFailed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ContentTooLarge",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "URITooLong",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnsupportedMediaType",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RangeNotSatisfiable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ExpectationFailed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Teapot",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "MisdirectedRequest",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnprocessableEntity",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Locked",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "FailedDependency",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "TooEarly",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UpgradeRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PreconditionRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "TooManyRequests",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestHeaderFieldsTooLarge",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnavailableForLegalReasons",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              },
              "typeParams": []
            },
            {
              "name": "server",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "InternalServerError",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotImplemented",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "BadGateway",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ServiceUnavailable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "GatewayTimeout",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "HTTPVersionNotSupported",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "VariantAlsoNegotiates",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "InsufficientStorage",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "LoopDetected",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotExtended",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NetworkAuthenticationRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "NAME",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 2,
      "col": 13,
      "byteIndex": 36
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Framework name."
    },
    "variableDef": {
      "tsType": {
        "repr": "Minirachne",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "Minirachne"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 7,
      "col": 13,
      "byteIndex": 160
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Framework version."
    },
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "STD_VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 14,
      "col": 13,
      "byteIndex": 359
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "function",
    "name": "createAbsolutePath",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 30,
      "col": 0,
      "byteIndex": 825
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create absolute path.\nMinirachne.createAbsolutePath(import.meta, './docs'); // C:\\DIR\\minirachne\\docs",
      "tags": [
        {
          "kind": "param",
          "name": "path",
          "doc": "Relative path"
        },
        {
          "kind": "return",
          "doc": "Absolute path"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "meta",
          "optional": false,
          "tsType": {
            "repr": "ImportMeta",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ImportMeta"
            }
          }
        },
        {
          "kind": "assign",
          "left": {
            "kind": "identifier",
            "name": "path",
            "optional": false,
            "tsType": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "right": "",
          "tsType": null
        }
      ],
      "returnType": null,
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "MINIRACHNE_VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 4,
      "col": 0,
      "byteIndex": 58
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/version.ts",
      "imported": "VERSION"
    }
  },
  {
    "kind": "import",
    "name": "dirname",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0,
      "byteIndex": 222
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "dirname"
    }
  },
  {
    "kind": "import",
    "name": "fromFileUrl",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0,
      "byteIndex": 222
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "fromFileUrl"
    }
  },
  {
    "kind": "import",
    "name": "join",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0,
      "byteIndex": 222
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "join"
    }
  },
  {
    "kind": "import",
    "name": "DENO_JSON",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 13,
      "col": 0,
      "byteIndex": 287
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/deno.json",
      "imported": "default"
    }
  }
]
