[
  {
    "kind": "class",
    "name": "StaticRoute",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create Static file server route."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "docs",
              "optional": false,
              "tsType": {
                "repr": "string",
                "kind": "keyword",
                "keyword": "string"
              }
            },
            {
              "kind": "identifier",
              "name": "option",
              "optional": true,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "order",
                      "params": [],
                      "computed": false,
                      "optional": true,
                      "tsType": {
                        "repr": "number",
                        "kind": "keyword",
                        "keyword": "number"
                      },
                      "typeParams": []
                    },
                    {
                      "name": "pattern",
                      "params": [],
                      "computed": false,
                      "optional": true,
                      "tsType": {
                        "repr": "",
                        "kind": "union",
                        "union": [
                          {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          },
                          {
                            "repr": "URLPattern",
                            "kind": "typeRef",
                            "typeRef": {
                              "typeParams": null,
                              "typeName": "URLPattern"
                            }
                          }
                        ]
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "DEFAULT_CHUNK_SIZE",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 12,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 13,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 14,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "string",
            "kind": "keyword",
            "keyword": "string"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "docs",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "headers",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 16,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "NotfoundCallback",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "NotfoundCallback"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "notfound",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 17,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "string",
              "kind": "keyword",
              "keyword": "string"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "directoryIndex",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 18,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "MIMETypes",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MIMETypes"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "mime",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setBaseHeader",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 42,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getBaseHeader",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 46,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "param",
                "name": "callback",
                "doc": "Callback. Set default if none."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setNotfound",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "callback",
                "optional": true,
                "tsType": {
                  "repr": "NotfoundCallback",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "NotfoundCallback"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 53,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseNotfound",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 66,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setDirectoryIndex",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "directoryIndex",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 70,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setMIMETypes",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "mime",
                "optional": false,
                "tsType": {
                  "repr": "MIMETYPES",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MIMETYPES"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 76,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseDirectory",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "basePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 81,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createReadableStream",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "range",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "typeLiteral",
                  "typeLiteral": {
                    "methods": [],
                    "properties": [
                      {
                        "name": "start",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      },
                      {
                        "name": "end",
                        "params": [],
                        "computed": false,
                        "optional": false,
                        "tsType": {
                          "repr": "number",
                          "kind": "keyword",
                          "keyword": "number"
                        },
                        "typeParams": []
                      }
                    ],
                    "callSignatures": [],
                    "indexSignatures": []
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 99,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "parseRange",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": false,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 128,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseFile",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "head",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              },
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "headers",
                "optional": false,
                "tsType": {
                  "repr": "Headers",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Headers"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": true,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 141,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createHeader",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "filePath",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "stat",
                "optional": false,
                "tsType": {
                  "repr": "Deno.FileInfo",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.FileInfo"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "range",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "",
                      "kind": "typeLiteral",
                      "typeLiteral": {
                        "methods": [],
                        "properties": [
                          {
                            "name": "start",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          },
                          {
                            "name": "end",
                            "params": [],
                            "computed": false,
                            "optional": false,
                            "tsType": {
                              "repr": "number",
                              "kind": "keyword",
                              "keyword": "number"
                            },
                            "typeParams": []
                          }
                        ],
                        "callSignatures": [],
                        "indexSignatures": []
                      }
                    },
                    {
                      "repr": "null",
                      "kind": "keyword",
                      "keyword": "null"
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 179,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createPath",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "request",
                "optional": false,
                "tsType": {
                  "repr": "Request",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Request"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 196,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/static.ts",
            "line": 203,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "Route",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "Route"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "WebSocketListener",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onOpen",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "Event",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Event"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 3,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onMessage",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "MessageEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MessageEvent"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 5,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onClose",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "CloseEvent",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "CloseEvent"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 7,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onError",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "ws",
                "optional": false,
                "tsType": {
                  "repr": "WebSocket",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocket"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "event",
                "optional": false,
                "tsType": {
                  "repr": "",
                  "kind": "union",
                  "union": [
                    {
                      "repr": "Event",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Event"
                      }
                    },
                    {
                      "repr": "ErrorEvent",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "ErrorEvent"
                      }
                    }
                  ]
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/ws.ts",
            "line": 9,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Router",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
      "line": 212,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = GET",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "get",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 219,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = HEAD",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "head",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 229,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = POST",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "post",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 239,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = PUT",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "put",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 249,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = DELETE",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set middleware in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "delete",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 259,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = OPTIONS",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "options",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 273,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Only Request.method or X-HTTP-Method-Override = PATCH",
            "tags": [
              {
                "kind": "param",
                "name": "path",
                "doc": "String path ('/test', '/img/*' etc ...)."
              },
              {
                "kind": "param",
                "name": "handler",
                "doc": "Call when route accessed."
              },
              {
                "kind": "param",
                "name": "middleware",
                "doc": "Set MiddlewareManager in route if exists."
              }
            ]
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "patch",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "path",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "handler",
                "optional": false,
                "tsType": {
                  "repr": "OnRequestHandler",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "OnRequestHandler"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "middleware",
                "optional": true,
                "tsType": {
                  "repr": "MiddlewareManager",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "MiddlewareManager"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/router.ts",
            "line": 287,
            "col": 4
          }
        }
      ],
      "extends": "BaseRouter",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "MiddlewareManager",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Middleware manager."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [],
      "properties": [
        {
          "tsType": {
            "repr": "",
            "kind": "array",
            "array": {
              "repr": "Middleware",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "Middleware"
              }
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "middleware",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 13,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "jsDoc": {
            "doc": "Create MiddlewareManager.\nMiddlewareManager.create(middleware1, middleware2, ...);"
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "create",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "middleware",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Middleware",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Middleware"
                    }
                  }
                }
              }
            ],
            "returnType": {
              "repr": "MiddlewareManager",
              "kind": "typeRef",
              "typeRef": {
                "typeParams": null,
                "typeName": "MiddlewareManager"
              }
            },
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 9,
            "col": 4
          }
        },
        {
          "jsDoc": {
            "doc": "Add middleware."
          },
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "add",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "rest",
                "arg": {
                  "kind": "identifier",
                  "name": "middleware",
                  "optional": false,
                  "tsType": null
                },
                "tsType": {
                  "repr": "",
                  "kind": "array",
                  "array": {
                    "repr": "Middleware",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "Middleware"
                    }
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 16,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "exec",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/middleware.ts",
            "line": 21,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [
        {
          "repr": "m",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "m"
          }
        }
      ],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "RequestData",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Request data."
    },
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "request",
              "params": [],
              "readonly": true,
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "Request",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Request"
                }
              },
              "typeParams": []
            },
            {
              "name": "connection",
              "params": [],
              "readonly": true,
              "computed": false,
              "optional": true,
              "tsType": {
                "repr": "ConnInfo",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ConnInfo"
                }
              },
              "typeParams": []
            },
            {
              "name": "detail",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [],
                  "callSignatures": [],
                  "indexSignatures": [
                    {
                      "readonly": false,
                      "params": [
                        {
                          "kind": "identifier",
                          "name": "keys",
                          "optional": false,
                          "tsType": {
                            "repr": "string",
                            "kind": "keyword",
                            "keyword": "string"
                          }
                        }
                      ],
                      "tsType": {
                        "repr": "any",
                        "kind": "keyword",
                        "keyword": "any"
                      }
                    }
                  ]
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "OnRequestHandler",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 13,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [],
      "properties": [],
      "callSignatures": [
        {
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 14,
            "col": 4
          },
          "params": [
            {
              "kind": "identifier",
              "name": "this",
              "optional": false,
              "tsType": {
                "repr": "Route",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Route"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RequestData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestData"
                }
              }
            }
          ],
          "tsType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "typeParams": []
        }
      ],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "RouteLike",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 17,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [],
      "methods": [
        {
          "name": "onRequest",
          "kind": "method",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 44,
            "col": 4
          },
          "jsDoc": {
            "doc": "Return server Response.\n\nExec next route when return Promise.reject or throw Error.\nThis object is Route when called this method.\nYou can use order and pattern.\n",
            "tags": [
              {
                "kind": "param",
                "name": "data",
                "doc": "Request data etc ..."
              }
            ]
          },
          "optional": false,
          "params": [
            {
              "kind": "identifier",
              "name": "this",
              "optional": false,
              "tsType": {
                "repr": "Route",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "Route"
                }
              }
            },
            {
              "kind": "identifier",
              "name": "data",
              "optional": false,
              "tsType": {
                "repr": "RequestData",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "RequestData"
                }
              }
            }
          ],
          "returnType": {
            "repr": "Promise",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": [
                {
                  "repr": "Response",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Response"
                  }
                }
              ],
              "typeName": "Promise"
            }
          },
          "typeParams": []
        }
      ],
      "properties": [
        {
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 23,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 28,
            "col": 4
          },
          "jsDoc": {
            "doc": "Match URL pattern."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "typeParams": []
        },
        {
          "name": "middleware",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 33,
            "col": 4
          },
          "jsDoc": {
            "doc": "Exec before onRequext."
          },
          "params": [],
          "computed": false,
          "optional": true,
          "tsType": {
            "repr": "MiddlewareManager",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "MiddlewareManager"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "interface",
    "name": "Route",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 47,
      "col": 0
    },
    "declarationKind": "export",
    "interfaceDef": {
      "extends": [
        {
          "repr": "RouteLike",
          "kind": "typeRef",
          "typeRef": {
            "typeParams": null,
            "typeName": "RouteLike"
          }
        }
      ],
      "methods": [],
      "properties": [
        {
          "name": "order",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 53,
            "col": 4
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "number",
            "kind": "keyword",
            "keyword": "number"
          },
          "typeParams": []
        },
        {
          "name": "pattern",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
            "line": 58,
            "col": 4
          },
          "jsDoc": {
            "doc": "Match URL pattern."
          },
          "params": [],
          "computed": false,
          "optional": false,
          "tsType": {
            "repr": "URLPattern",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URLPattern"
            }
          },
          "typeParams": []
        }
      ],
      "callSignatures": [],
      "indexSignatures": [],
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "Middleware",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 61,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [
            {
              "name": "handle",
              "kind": "method",
              "params": [
                {
                  "kind": "identifier",
                  "name": "data",
                  "optional": false,
                  "tsType": {
                    "repr": "RequestData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RequestData"
                    }
                  }
                }
              ],
              "optional": false,
              "returnType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "typeParams": []
            }
          ],
          "properties": [],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "typeAlias",
    "name": "MiddlewareManager",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 74,
      "col": 0
    },
    "declarationKind": "export",
    "typeAliasDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [
            {
              "name": "add",
              "kind": "method",
              "params": [
                {
                  "kind": "rest",
                  "arg": {
                    "kind": "identifier",
                    "name": "middleware",
                    "optional": false,
                    "tsType": null
                  },
                  "tsType": {
                    "repr": "",
                    "kind": "array",
                    "array": {
                      "repr": "Middleware",
                      "kind": "typeRef",
                      "typeRef": {
                        "typeParams": null,
                        "typeName": "Middleware"
                      }
                    }
                  }
                }
              ],
              "optional": false,
              "returnType": {
                "repr": "MiddlewareManager",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "MiddlewareManager"
                }
              },
              "typeParams": []
            },
            {
              "name": "exec",
              "kind": "method",
              "params": [
                {
                  "kind": "identifier",
                  "name": "data",
                  "optional": false,
                  "tsType": {
                    "repr": "RequestData",
                    "kind": "typeRef",
                    "typeRef": {
                      "typeParams": null,
                      "typeName": "RequestData"
                    }
                  }
                }
              ],
              "optional": false,
              "returnType": {
                "repr": "Promise",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": [
                    {
                      "repr": "unknown",
                      "kind": "keyword",
                      "keyword": "unknown"
                    }
                  ],
                  "typeName": "Promise"
                }
              },
              "typeParams": []
            }
          ],
          "properties": [],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "ConnInfo",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/types.d.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "ConnInfo"
    }
  },
  {
    "kind": "class",
    "name": "Response",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 11,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "Headers",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Headers"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "jsonHeader",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 16,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": null,
          "optional": false,
          "isAbstract": false,
          "isStatic": true,
          "name": "JSON",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "init",
                "optional": true,
                "tsType": {
                  "repr": "ResponseInit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResponseInit"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 2,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "json",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "any",
                  "kind": "keyword",
                  "keyword": "any"
                }
              },
              {
                "kind": "identifier",
                "name": "init",
                "optional": true,
                "tsType": {
                  "repr": "ResponseInit",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "ResponseInit"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/response.ts",
            "line": 17,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "class",
    "name": "Server",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
      "line": 9,
      "col": 0
    },
    "declarationKind": "export",
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 19,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "URL",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "URL"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "url",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 10,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "",
            "kind": "typeLiteral",
            "typeLiteral": {
              "methods": [],
              "properties": [
                {
                  "name": "keyFile",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                },
                {
                  "name": "certFile",
                  "params": [],
                  "computed": false,
                  "optional": false,
                  "tsType": {
                    "repr": "string",
                    "kind": "keyword",
                    "keyword": "string"
                  },
                  "typeParams": []
                }
              ],
              "callSignatures": [],
              "indexSignatures": []
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "files",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 11,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "AbortController",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "AbortController"
            }
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "controller",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 15,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "Router",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "Router"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "router",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 16,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "ServerResponse",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ServerResponse"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "response",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 17,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getURL",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 25,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setURL",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "url",
                "optional": false,
                "tsType": {
                  "repr": "URL",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "URL"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 29,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setCertFile",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "keyFile",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              },
              {
                "kind": "identifier",
                "name": "certFile",
                "optional": false,
                "tsType": {
                  "repr": "string",
                  "kind": "keyword",
                  "keyword": "string"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 35,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "stop",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 41,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "run",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 45,
            "col": 4
          }
        },
        {
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "onRequest",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 64,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "upgradeWebSocket",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "data",
                "optional": false,
                "tsType": {
                  "repr": "RequestData",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "RequestData"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "webSocketEvent",
                "optional": false,
                "tsType": {
                  "repr": "WebSocketListener",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "WebSocketListener"
                  }
                }
              },
              {
                "kind": "identifier",
                "name": "options",
                "optional": true,
                "tsType": {
                  "repr": "Deno.UpgradeWebSocketOptions",
                  "kind": "typeRef",
                  "typeRef": {
                    "typeParams": null,
                    "typeName": "Deno.UpgradeWebSocketOptions"
                  }
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": true,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/server.ts",
            "line": 76,
            "col": 4
          }
        }
      ],
      "extends": null,
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "Cookie",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "line": 6,
      "col": 13
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "get",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            },
            {
              "name": "set",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            },
            {
              "name": "delete",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": null,
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "Redirect",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/redirect.ts",
      "line": 16,
      "col": 13
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create Redirect Response."
    },
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "MultipleChoices",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "MovedPermanently",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "Found",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "SeeOther",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "NotModified",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "UseProxy",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "TemporaryRedirect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            },
            {
              "name": "PermanentRedirect",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "fnOrConstructor",
                "fnOrConstructor": {
                  "constructor": false,
                  "tsType": {
                    "repr": "unknown",
                    "kind": "keyword",
                    "keyword": "unknown"
                  },
                  "params": [
                    {
                      "kind": "identifier",
                      "name": "redirect",
                      "optional": false,
                      "tsType": {
                        "repr": "string",
                        "kind": "keyword",
                        "keyword": "string"
                      }
                    },
                    {
                      "kind": "identifier",
                      "name": "responseInit",
                      "optional": true,
                      "tsType": {
                        "repr": "ResponseInit",
                        "kind": "typeRef",
                        "typeRef": {
                          "typeParams": null,
                          "typeName": "ResponseInit"
                        }
                      }
                    }
                  ],
                  "typeParams": []
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "class",
    "name": "HTTPError",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 6,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "HTTPError has Error response."
    },
    "classDef": {
      "isAbstract": false,
      "constructors": [
        {
          "jsDoc": {
            "tags": [
              {
                "kind": "param",
                "name": "status",
                "doc": "HTTP Status code."
              }
            ]
          },
          "accessibility": null,
          "hasBody": true,
          "name": "constructor",
          "params": [
            {
              "kind": "identifier",
              "name": "status",
              "optional": false,
              "tsType": {
                "repr": "number",
                "kind": "keyword",
                "keyword": "number"
              }
            },
            {
              "kind": "identifier",
              "name": "responseInit",
              "optional": true,
              "tsType": {
                "repr": "ResponseInit",
                "kind": "typeRef",
                "typeRef": {
                  "typeParams": null,
                  "typeName": "ResponseInit"
                }
              }
            }
          ],
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 13,
            "col": 4
          }
        }
      ],
      "properties": [
        {
          "tsType": {
            "repr": "ResponseInit",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ResponseInit"
            }
          },
          "readonly": false,
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "responseInit",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 7,
            "col": 4
          }
        },
        {
          "tsType": {
            "repr": "boolean",
            "kind": "keyword",
            "keyword": "boolean"
          },
          "readonly": false,
          "accessibility": "protected",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "propagation",
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 8,
            "col": 4
          }
        }
      ],
      "indexSignatures": [],
      "methods": [
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "createResponse",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 19,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "setPropagation",
          "kind": "method",
          "functionDef": {
            "params": [
              {
                "kind": "identifier",
                "name": "propagation",
                "optional": false,
                "tsType": {
                  "repr": "boolean",
                  "kind": "keyword",
                  "keyword": "boolean"
                }
              }
            ],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 23,
            "col": 4
          }
        },
        {
          "accessibility": "public",
          "optional": false,
          "isAbstract": false,
          "isStatic": false,
          "name": "getPropagation",
          "kind": "method",
          "functionDef": {
            "params": [],
            "returnType": null,
            "hasBody": true,
            "isAsync": false,
            "isGenerator": false,
            "typeParams": []
          },
          "location": {
            "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
            "line": 28,
            "col": 4
          }
        }
      ],
      "extends": "Error",
      "implements": [],
      "typeParams": [],
      "superTypeParams": []
    }
  },
  {
    "kind": "variable",
    "name": "HTTPErrors",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 33,
      "col": 13
    },
    "declarationKind": "export",
    "variableDef": {
      "tsType": {
        "repr": "",
        "kind": "typeLiteral",
        "typeLiteral": {
          "methods": [],
          "properties": [
            {
              "name": "client",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "BadRequest",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Unauthorized",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PaymentRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Forbidden",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotFound",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "MethodNotAllowed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotAcceptable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ProxyAuthenticationRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ProxyAuthRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestTimeout",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Conflict",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Gone",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "LengthRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PreconditionFailed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestEntityTooLarge",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestURITooLong",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnsupportedMediaType",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestedRangeNotSatisfiable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ExpectationFailed",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Teapot",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "MisdirectedRequest",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnprocessableEntity",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "Locked",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "FailedDependency",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "TooEarly",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UpgradeRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "PreconditionRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "TooManyRequests",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "RequestHeaderFieldsTooLarge",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "UnavailableForLegalReasons",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              },
              "typeParams": []
            },
            {
              "name": "server",
              "params": [],
              "computed": false,
              "optional": false,
              "tsType": {
                "repr": "",
                "kind": "typeLiteral",
                "typeLiteral": {
                  "methods": [],
                  "properties": [
                    {
                      "name": "InternalServerError",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotImplemented",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "BadGateway",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "ServiceUnavailable",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "GatewayTimeout",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "HTTPVersionNotSupported",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "VariantAlsoNegotiates",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "InsufficientStorage",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "LoopDetected",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NotExtended",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    },
                    {
                      "name": "NetworkAuthenticationRequired",
                      "params": [],
                      "computed": false,
                      "optional": false,
                      "tsType": {
                        "repr": "",
                        "kind": "fnOrConstructor",
                        "fnOrConstructor": {
                          "constructor": false,
                          "tsType": {
                            "repr": "unknown",
                            "kind": "keyword",
                            "keyword": "unknown"
                          },
                          "params": [
                            {
                              "kind": "identifier",
                              "name": "responseInit",
                              "optional": true,
                              "tsType": {
                                "repr": "ResponseInit",
                                "kind": "typeRef",
                                "typeRef": {
                                  "typeParams": null,
                                  "typeName": "ResponseInit"
                                }
                              }
                            }
                          ],
                          "typeParams": []
                        }
                      },
                      "typeParams": []
                    }
                  ],
                  "callSignatures": [],
                  "indexSignatures": []
                }
              },
              "typeParams": []
            }
          ],
          "callSignatures": [],
          "indexSignatures": []
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "import",
    "name": "Status",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "Status"
    }
  },
  {
    "kind": "import",
    "name": "STATUS_TEXT",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/src/http_error.ts",
      "line": 1,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "STATUS_TEXT"
    }
  },
  {
    "kind": "variable",
    "name": "NAME",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 2,
      "col": 13
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Framework name."
    },
    "variableDef": {
      "tsType": {
        "repr": "Minirachne",
        "kind": "literal",
        "literal": {
          "kind": "string",
          "string": "Minirachne"
        }
      },
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 7,
      "col": 13
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Framework version."
    },
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "variable",
    "name": "STD_VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 14,
      "col": 13
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Use Deno std version."
    },
    "variableDef": {
      "tsType": null,
      "kind": "const"
    }
  },
  {
    "kind": "function",
    "name": "createAbsolutePath",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 30,
      "col": 0
    },
    "declarationKind": "export",
    "jsDoc": {
      "doc": "Create absolute path.\nMinirachne.createAbsolutePath(import.meta, './docs'); // C:\\DIR\\minirachne\\docs",
      "tags": [
        {
          "kind": "param",
          "name": "path",
          "doc": "Relative path"
        },
        {
          "kind": "return",
          "doc": "Absolute path"
        }
      ]
    },
    "functionDef": {
      "params": [
        {
          "kind": "identifier",
          "name": "meta",
          "optional": false,
          "tsType": {
            "repr": "ImportMeta",
            "kind": "typeRef",
            "typeRef": {
              "typeParams": null,
              "typeName": "ImportMeta"
            }
          }
        },
        {
          "kind": "assign",
          "left": {
            "kind": "identifier",
            "name": "path",
            "optional": false,
            "tsType": null
          },
          "right": "[UNSUPPORTED]",
          "tsType": null
        }
      ],
      "returnType": null,
      "hasBody": true,
      "isAsync": false,
      "isGenerator": false,
      "typeParams": []
    }
  },
  {
    "kind": "import",
    "name": "MINIRACHNE_VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 4,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/version.ts",
      "imported": "VERSION"
    }
  },
  {
    "kind": "import",
    "name": "dirname",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "dirname"
    }
  },
  {
    "kind": "import",
    "name": "fromFileUrl",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "fromFileUrl"
    }
  },
  {
    "kind": "import",
    "name": "join",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "join"
    }
  },
  {
    "kind": "import",
    "name": "DENO_STD_VERSION",
    "location": {
      "filename": "file:///C:/Personal/GitHub/minirachne/mod.ts",
      "line": 11,
      "col": 0
    },
    "declarationKind": "private",
    "importDef": {
      "src": "file:///C:/Personal/GitHub/minirachne/src/deno_std.ts",
      "imported": "VERSION"
    }
  }
]
